[user]
	name = Maciej Kaszubowski
	email = maciej@mkaszubowski.pl
#[http]
#  sslVerify = false
[alias]
  a = add
  aa = add --all
  ac = !git add --all && git commit -a -m
  acc = !git add . && git commit -a --reuse-message=HEAD
  alias = "!sh -c '[ $# = 2 ] && git config --global alias.\"$1\" \"$2\" && exit 0 || echo \"usage: git alias <new alias> <original command>\" >&2 && exit 1' -"
  aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /'
  authors = "!git log --format='%aN <%aE>' | awk '{arr[$0]++} END{for (i in arr){print arr[i], i;}}' | sort -rn | cut -d' ' -f2-"
  b = branch
  c = commit
  cm = commit -m
  ca = commit --amend --reuse-message=HEAD
  cl = clone
  pom = pull origin master
  po = pull origin
  cleanse = !git ls-files --others --exclude-standard | xargs rm
  co = checkout
  com = checkout master
  conflicts = !git ls-files -u | cut -f 2 | sort -u
  cp = cherry-pick
  d = diff
  df = diff --staged
  f = fetch
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  root = !cd $(git rev-parse --show-toplevel)
  skip = update-index --assume-unchanged
  st = status
  todo = grep --heading --break --ignore-case -e 'TODO'
  unskip = update-index --assume-changed
  subtree = "!/apps/git/contrib/subtree/git-subtree.sh"
  subtree-merge = "!f(){ git fetch $2 && git subtree merge --prefix=$1 $2/$3; }; f" # arguments: [prefix, remote, branch]
  subtree-push = "!f(){ git subtree split --prefix $1 -b $3 && git push $2 $2:$3; }; f" # same as above
  publish = "!f(){ git push -u $1 $(git symbolic-ref --short HEAD); }; f"
  ptag = "!f(){ git ac $1; git tag $1 && git push && git push --tags; }; f"
[color "status"]
  added = green
  modified = red
  untracked = blue
[color]
	ui = true
  diff = auto
  status = auto
  branch = auto
[core]
  excludesfile = ~/.gitignore_global
	editor = nvim
[mergetool "sublime"]
  cmd = subl -w $MERGED
  trustExitCode = false
[github]
	user = mkaszubowski
[push]
	default = current
[hub]
	protocol = ssh
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[pull]
	default = current
[commit]
	verbose = true
